<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 读取外部的数据库属性配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 扫描含有注解的包-->
    <context:component-scan base-package="cn.lt.pianke.dao"/>
    <context:component-scan base-package="cn.lt.pianke.service"/>
    <!--配置数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--驱动名称-->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <!-- JDBC 连接串-->
        <property name="url" value="${jdbc.url}"/>
        <!-- 数据库用户名称-->
        <property name="username" value="${jdbc.username}"/>
        <!-- 数据库密码-->
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化大小-->
        <property name="initialSize" value="15"/>
        <!-- 连接池最大使用连接数量-->
        <property name="maxActive" value="20"/>
        <!-- 连接池最小空闲-->
        <property name="minIdle" value="0"/>
        <!-- 配置获取连接等待超时的时间-->
        <property name="maxWait" value="60000"/>

        <!--配置间隔多久才进行一次检测，检测需要关闭的时间空闲连接，单位是毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <!--配置一个连接在池中最小生存的时间，单位是毫秒-->
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <!--连接空闲时测试是否有效-->
        <property name="testWhileIdle" value="false"/>
        <!--获取连接时测试是否有效-->
        <property name="testOnBorrow" value="false"/>
        <!--归还连接时是否测试有效-->
        <property name="testOnReturn" value="false"/>
        <!--打开PSCache，并且制定每个连接上PSCache的大小-->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
    </bean>


    <!-- 配置Session工厂实例-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:/cn/lt/pianke/mapper/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="cn.lt.pianke.model"/>
    </bean>
    <!--扫描Mapper接口与文件-->
    <bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.lt.pianke.dao"/>
        <property name="markerInterface" value="cn.lt.pianke.dao.BaseDAO"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="properties">
            <value>
                mappers = cn.lt.pianke.dao.BaseDAO
                IDENTITY = MYSQL
            </value>
        </property>
    </bean>

    <!--事务管理器配置-->
    <bean id="txManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource"/>

    <!--使用注解声明管理，需要使用事务的类，必须加上@Transactional注解-->
    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="50000000"/>
    </bean>
</beans>